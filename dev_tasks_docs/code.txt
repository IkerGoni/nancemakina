# Development Plan: Step 019 - V1 MVP Documentation Finalization and Comprehensive Testnet Preparation

**Task:** Finalize all project documentation, with a major focus on the `CONFIGURATION_GUIDE.md` to reflect all current features including selectable engines and all configurable strategy parameters. Prepare a robust configuration for a comprehensive Testnet validation run.

**Objective:** Ensure the V1 MVP is thoroughly documented for users, and a well-defined Testnet validation plan is ready to confirm end-to-end functionality and stability with a realistic strategy configuration.

**Target File(s)/Areas:**
*   `docs/CONFIGURATION_GUIDE.md` (Primary focus: complete and accurate detailing of all V1 options)
*   `README.md` (Ensure it's up-to-date with CLI options and points to new guides)
*   `config/config.yaml.example` (Ensure it's a pristine, well-commented template reflecting all features, including `engine_config` and sensible defaults for V1 strategy)
*   `docs/ARCHITECTURE.md` (Minor review for updates, e.g., mentioning `BaseSignalEngine` if implemented)
*   `docs/TROUBLESHOOTING.md` (Add any new tips based on recent debugging)
*   A specific `config/testnet_validation_config.yaml` file to be created for the Testnet run.

**Context:**
*   The bot now supports loading specified configuration files via CLI (`--config`).
*   It dynamically loads the signal engine (`SignalEngineV1` or others) defined in the `engine_config` section of the loaded YAML.
*   `SignalEngineV1` has configurable filters (buffer, volume, volatility/ATR) and SL/TP logic (pivot, percentage, ATR options, R:R, fixed percentage).
*   `SignalEngineV1` (and potentially a `BaseSignalEngine`) uses `check_signal_with_df` for accurate backtesting.
*   The backtester is functional for testing these configurations.

**Detailed Plan:**

1.  **Comprehensive Update of `docs/CONFIGURATION_GUIDE.md`:**
    *   **Action:** Systematically review and expand this guide to be the definitive reference for all `config.yaml` settings.
    *   **Cover `engine_config`:** Explain the `module` and `class` parameters for selecting the signal engine.
    *   **Cover `global_settings.v1_strategy` in Full Detail:**
        *   Reiterate core SMA parameters.
        *   **Filters:** For `buffer_time`, `volume`, and `volatility` (ATR):
            *   Explain the purpose of each filter.
            *   Detail all parameters (e.g., `enabled`, `candles`, `average_period`, `threshold_ratio`, `atr_period`, `condition_type`, `value`).
            *   List valid options for `condition_type` in the volatility filter.
            *   Provide clear examples of how to configure each.
        *   **`sl_options`:**
            *   Explain `primary_type` ("pivot", "percentage", "atr") and `fallback_type`.
            *   Detail parameters for `pivot_settings` (`lookback_candles`).
            *   Detail parameters for `percentage_settings` (`value`).
            *   Detail parameters for `atr_settings` (`atr_period`, `multiplier`).
            *   Explain `enable_fallback`.
        *   **`tp_options`:**
            *   Explain `primary_type` ("rr_ratio", "fixed_percentage", "atr_multiple").
            *   Detail parameters for `rr_ratio_settings` (`value`), including its relation to the older global `tp_sl_ratio`.
            *   Detail parameters for `fixed_percentage_settings` (`value`).
            *   Detail parameters for `atr_multiple_settings` (`atr_period`, `multiplier_from_entry`).
    *   **Cover Pair-Specific Overrides:** Clearly explain how any global setting under `v1_strategy` (including nested ones like `filters.volume.enabled` or `sl_options.pivot_settings.lookback_candles`) can be overridden at the pair level. Provide examples.
    *   **Defaults:** For each parameter, state its default value if not specified by the user.
    *   **Structure and Clarity:** Ensure the guide is well-organized with clear headings and easy-to-understand language.

2.  **Update `README.md`:**
    *   **Action:** Add information about the new `--config` CLI argument for `python -m src.main`.
    *   **Action:** Update the "Features" section to include dynamic engine selection and advanced configurable filters/SL/TP.
    *   **Action:** Ensure the "Configuration" section prominently links to the `CONFIGURATION_GUIDE.md` for full details.

3.  **Finalize `config/config.yaml.example`:**
    *   **Action:** Review and ensure this file is pristine.
    *   It must include the `engine_config:` section.
    *   All filter, SL, and TP options should be present with sensible default values (e.g., SMA 21/200, filters disabled by default, pivot SL with percentage fallback, R:R TP).
    *   Ensure comments are clear and helpful.

4.  **Review Other Documentation (`ARCHITECTURE.md`, `TROUBLESHOOTING.md`):**
    *   **Action:** Briefly update `ARCHITECTURE.md` if the introduction of `BaseSignalEngine` or the dynamic loading mechanism significantly changes the component interaction description.
    *   **Action:** Add any new troubleshooting tips to `TROUBLESHOOTING.md` based on recent development and debugging experiences.

5.  **Prepare for Comprehensive Testnet Validation:**
    *   **Action:** Create a dedicated configuration file for this Testnet run, e.g., `config/testnet_v1_full_config.yaml`.
    *   **Action:** In this file:
        *   Set `api.testnet: true` and use valid Testnet API keys.
        *   Ensure `engine_config` points to `SignalEngineV1`.
        *   Select a common pair (e.g., `BTC_USDT`).
        *   **Strategy Configuration:** Choose a *realistic and testable* V1 strategy configuration. This means:
            *   Standard SMA periods (e.g., 21/50 or 50/200).
            *   `min_signal_interval_minutes`: A reasonable value like 15 or 30.
            *   **Filters:** Start by enabling one or two filters with moderate settings (e.g., `buffer_time.enabled: true, candles: 2` and `volume.enabled: true, average_period: 20, threshold_ratio: 1.2`). Don't enable everything at once.
            *   **SL/TP:** Choose a primary SL (e.g., "pivot" with lookback 30, and "percentage" fallback with 2%) and a primary TP (e.g., "rr_ratio" with value 2.0).
        *   `logging.level: "INFO"` (can be set to `DEBUG` during the actual run if specific issues arise).
    *   **Action:** Document the chosen parameters for this Testnet run, including the rationale if specific filter settings are being targeted for observation.

**Acceptance Criteria:**
*   `docs/CONFIGURATION_GUIDE.md` is complete, accurate, and exhaustively documents all V1 configuration options, including `engine_config`, all filters, SL, and TP settings, their parameters, defaults, and override mechanisms.
*   `README.md` accurately reflects the bot's current capabilities and CLI options.
*   `config/config.yaml.example` is a clean, well-commented template with sensible defaults for all V1 features.
*   A specific, well-thought-out configuration file for the upcoming comprehensive Testnet validation run is prepared.
*   The project is ready for a thorough end-to-end Testnet validation campaign.